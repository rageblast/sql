Users Schema:

CREATE TABLE users (
    id INTEGER AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
);

Photos Schema:

CREATE TABLE photos (
    id INTEGER AUTO_INCREMENT PRIMARY KEY,
    image_url VARCHAR(255) NOT NULL,
    user_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(user_id) REFERENCES users(id)
);

Comments Schema:

CREATE TABLE comments (
    id INTEGER AUTO_INCREMENT PRIMARY KEY,
    comment_text VARCHAR(255) NOT NULL,
    photo_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    FOREIGN KEY(user_id) REFERENCES users(id)
);

Likes Schema:

CREATE TABLE likes (
    user_id INTEGER NOT NULL,
    photo_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(user_id) REFERENCES users(id),
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    PRIMARY KEY(user_id, photo_id) // Nobody can like this post more than one time
);

Followers Schema:

CREATE TABLE follows (
    follower_id INTEGER NOT NULL,
    followee_id INTEGER NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(follower_id) REFERENCES users(id),
    FOREIGN KEY(followee_id) REFERENCES users(id),
    PRIMARY KEY(follower_id, followee_id)
);

Hash Tags:

Solution 1:

id  image_url    caption   tags
1   '/ksd97123'  'My cat'  '#cat#pets#animals#cute'

Limits:
-> Limited number of tags can be stored
-> Cannot store additional information
-> Have to be careful with searching

Solution 2:
Table: 1

id  image_url    caption   
1   '/ksd97123'  'My cat'
3   '/87hghjkd'  'A Selfie'

Table: 2

tag_name    photo_id
'#cute'        1
'#microwave'   3

Limits:
Slower Than previous Solution

Solution 3:
Table: 1

id  image_url    caption   
1   '/ksd97123'  'My cat'
3   '/87hghjkd'  'A Selfie'

Table: 2

tag_name photo_id
'#cute'   1
'#microwave'   3

Table: 3

photo_id   tag_id
1          1
3          1

Limits:
More work when inserting/updating
Have to worry about orphans (deleting Tag)

we are using solution 3:

CREATE TABLE tags (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  tag_name VARCHAR(255) UNIQUE,
  created_at TIMESTAMP DEFAULT NOW()
);

CREATE TABLE photo_tags (
    photo_id INTEGER NOT NULL,
    tag_id INTEGER NOT NULL,
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    FOREIGN KEY(tag_id) REFERENCES tags(id),
    PRIMARY KEY(photo_id, tag_id)
);
